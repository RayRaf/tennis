// JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    initializeSettings();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupThemeControls();
    setupPerformanceControls();
    setupDeveloperTools();
    updateSystemInfo();
});

function initializeSettings() {
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
    const currentTheme = UI.getPreferredTheme();
    document.querySelectorAll('.theme-option').forEach(option => {
        option.classList.remove('active');
        if (option.dataset.theme === currentTheme) {
            option.classList.add('active');
        }
    });
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const currentPerformance = UI.getPerformanceMode();
    document.querySelectorAll('.performance-option').forEach(option => {
        option.classList.remove('active');
        if (option.dataset.mode === currentPerformance) {
            option.classList.add('active');
        }
    });
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ FPS –º–æ–Ω–∏—Ç–æ—Ä–∞
    const fpsToggle = document.getElementById('fps-monitor-toggle');
    if (fpsToggle) {
        fpsToggle.checked = PerformanceMonitor.isRunning();
    }
}

function setupThemeControls() {
    document.querySelectorAll('.theme-option').forEach(option => {
        option.addEventListener('click', function() {
            const theme = this.dataset.theme;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            document.querySelectorAll('.theme-option').forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
            if (theme === 'auto') {
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–∞
                localStorage.removeItem('theme');
                const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                UI.setTheme(prefersDark ? 'dark' : 'light');
            } else {
                UI.setTheme(theme);
            }
            
            showFeedback(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: ${getThemeName(theme)}`);
        });
    });
}

function setupPerformanceControls() {
    document.querySelectorAll('.performance-option').forEach(option => {
        option.addEventListener('click', function() {
            const mode = this.dataset.mode;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            document.querySelectorAll('.performance-option').forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º
            UI.setPerformanceMode(mode);
            
            showFeedback(`–†–µ–∂–∏–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${getPerformanceModeName(mode)}`);
        });
    });
}

function setupDeveloperTools() {
    // FPS –º–æ–Ω–∏—Ç–æ—Ä
    const fpsToggle = document.getElementById('fps-monitor-toggle');
    if (fpsToggle) {
        fpsToggle.addEventListener('change', function() {
            if (this.checked) {
                PerformanceMonitor.start();
                showFeedback('FPS –º–æ–Ω–∏—Ç–æ—Ä –≤–∫–ª—é—á–µ–Ω');
            } else {
                PerformanceMonitor.stop();
                showFeedback('FPS –º–æ–Ω–∏—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω');
            }
        });
    }
    
    // –ë–µ–Ω—á–º–∞—Ä–∫
    const benchmarkBtn = document.getElementById('run-benchmark');
    if (benchmarkBtn) {
        benchmarkBtn.addEventListener('click', function() {
            showFeedback('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
            
            setTimeout(() => {
                const results = PerformanceMonitor.benchmark();
                showDetailedBenchmarkResults(results);
            }, 500);
        });
    }
    
    // –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const resetBtn = document.getElementById('reset-settings');
    if (resetBtn) {
        resetBtn.addEventListener('click', function() {
            if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
                resetAllSettings();
            }
        });
    }
}

function updateSystemInfo() {
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ
    const browserInfo = getBrowserInfo();
    document.getElementById('browser-info').textContent = browserInfo;
    
    // –Ø–¥—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
    const cores = navigator.hardwareConcurrency || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    document.getElementById('cpu-cores').textContent = cores;
    
    // –ü–∞–º—è—Ç—å
    const memory = navigator.deviceMemory ? `${navigator.deviceMemory} GB` : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    document.getElementById('device-memory').textContent = memory;
    
    // –¢–∏–ø —Å–µ—Ç–∏
    const networkType = navigator.connection ? navigator.connection.effectiveType : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    document.getElementById('network-type').textContent = networkType;
    
    // –£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
    const reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞';
    document.getElementById('reduced-motion').textContent = reducedMotion;
}

function getBrowserInfo() {
    const userAgent = navigator.userAgent;
    
    if (userAgent.includes('Chrome') && !userAgent.includes('Edg')) {
        return 'Chrome';
    } else if (userAgent.includes('Firefox')) {
        return 'Firefox';
    } else if (userAgent.includes('Safari') && !userAgent.includes('Chrome')) {
        return 'Safari';
    } else if (userAgent.includes('Edg')) {
        return 'Edge';
    } else {
        return '–î—Ä—É–≥–æ–π';
    }
}

function getThemeName(theme) {
    const names = {
        'light': '–°–≤–µ—Ç–ª–∞—è',
        'dark': '–¢—ë–º–Ω–∞—è',
        'auto': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è'
    };
    return names[theme] || theme;
}

function getPerformanceModeName(mode) {
    const names = {
        'performance': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        'balanced': '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
        'visual': '–í–∏–∑—É–∞–ª—å–Ω—ã–π'
    };
    return names[mode] || mode;
}

function showFeedback(message, type = 'success') {
    const feedback = document.createElement('div');
    feedback.className = `settings-feedback ${type}`;
    feedback.textContent = message;
    
    feedback.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: var(--success-gradient);
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        box-shadow: var(--shadow-xl);
        z-index: 10001;
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.3s ease;
        max-width: 300px;
    `;
    
    if (type === 'error') {
        feedback.style.background = 'var(--danger-gradient)';
    } else if (type === 'info') {
        feedback.style.background = 'var(--secondary-gradient)';
    }
    
    document.body.appendChild(feedback);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
        feedback.style.opacity = '1';
        feedback.style.transform = 'translateX(0)';
    });
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        feedback.style.opacity = '0';
        feedback.style.transform = 'translateX(100%)';
        setTimeout(() => feedback.remove(), 300);
    }, 3000);
}

function showDetailedBenchmarkResults(results) {
    const modal = document.createElement('div');
    modal.className = 'benchmark-modal';
    modal.innerHTML = `
        <div class="benchmark-content">
            <h3>üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h3>
            
            <div class="benchmark-section">
                <h4>üì± –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h4>
                <div class="benchmark-grid">
                    <div class="benchmark-item">
                        <strong>–Ø–¥—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞:</strong>
                        <span>${results.device.cores}</span>
                    </div>
                    <div class="benchmark-item">
                        <strong>–û–±—ä–µ–º –ø–∞–º—è—Ç–∏:</strong>
                        <span>${results.device.memory}</span>
                    </div>
                    <div class="benchmark-item">
                        <strong>–¢–∏–ø —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:</strong>
                        <span>${results.device.connection}</span>
                    </div>
                    <div class="benchmark-item">
                        <strong>–£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è:</strong>
                        <span>${results.device.reducedMotion ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}</span>
                    </div>
                </div>
            </div>
            
            <div class="benchmark-section">
                <h4>‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h4>
                <div class="benchmark-grid">
                    <div class="benchmark-item">
                        <strong>–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º:</strong>
                        <span>${getPerformanceModeName(results.performance.currentMode)}</span>
                    </div>
                    <div class="benchmark-item">
                        <strong>FPS:</strong>
                        <span>${results.performance.currentFPS}</span>
                    </div>
                </div>
            </div>
            
            <div class="benchmark-recommendations">
                <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
                <div id="benchmark-recommendations-content"></div>
            </div>
            
            <button class="btn primary benchmark-close">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
    `;
    
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10002;
        opacity: 0;
        transition: opacity 0.3s ease;
    `;
    
    const content = modal.querySelector('.benchmark-content');
    content.style.cssText = `
        background: var(--bg-glass);
        backdrop-filter: blur(20px);
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--radius-xl);
        padding: 2rem;
        max-width: 600px;
        max-height: 80vh;
        overflow-y: auto;
        color: var(--text-primary);
        transform: scale(0.9);
        transition: transform 0.3s ease;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    const recommendationsContent = modal.querySelector('#benchmark-recommendations-content');
    const recommendations = generateRecommendations(results);
    recommendationsContent.innerHTML = recommendations;
    
    document.body.appendChild(modal);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
        modal.style.opacity = '1';
        content.style.transform = 'scale(1)';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ
    modal.querySelector('.benchmark-close').addEventListener('click', () => {
        modal.style.opacity = '0';
        content.style.transform = 'scale(0.9)';
        setTimeout(() => modal.remove(), 300);
    });
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.querySelector('.benchmark-close').click();
        }
    });
}

function generateRecommendations(results) {
    const recommendations = [];
    
    // –ê–Ω–∞–ª–∏–∑ —è–¥–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
    if (results.device.cores < 4) {
        recommendations.push('‚ö° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∂–∏–º "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" –∏–∑-–∑–∞ –º–∞–ª–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è–¥–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞');
    } else if (results.device.cores >= 8) {
        recommendations.push('‚ú® –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º "–í–∏–∑—É–∞–ª—å–Ω—ã–π" - —É –≤–∞—Å –º–æ—â–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä');
    }
    
    // –ê–Ω–∞–ª–∏–∑ –ø–∞–º—è—Ç–∏
    if (results.device.memory && results.device.memory.includes('GB')) {
        const memoryAmount = parseFloat(results.device.memory);
        if (memoryAmount < 4) {
            recommendations.push('‚ö° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∂–∏–º "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" –∏–∑-–∑–∞ –º–∞–ª–æ–≥–æ –æ–±—ä–µ–º–∞ –ø–∞–º—è—Ç–∏');
        } else if (memoryAmount >= 8) {
            recommendations.push('‚ú® –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–µ–∂–∏–º–∞ "–í–∏–∑—É–∞–ª—å–Ω—ã–π"');
        }
    }
    
    // –ê–Ω–∞–ª–∏–∑ FPS
    if (results.performance.currentFPS < 30) {
        recommendations.push('‚ö†Ô∏è –ù–∏–∑–∫–∏–π FPS - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ —Ä–µ–∂–∏–º "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"');
    } else if (results.performance.currentFPS >= 55) {
        recommendations.push('‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Ä–µ–∂–∏–º');
    }
    
    // –ê–Ω–∞–ª–∏–∑ —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    if (results.device.reducedMotion) {
        recommendations.push('‚ôø –í–∫–ª—é—á–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ "–£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è" - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∂–∏–º "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"');
    }
    
    // –ê–Ω–∞–ª–∏–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if (results.device.connection === 'slow-2g' || results.device.connection === '2g') {
        recommendations.push('üì∂ –ú–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∂–∏–º "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏');
    }
    
    if (recommendations.length === 0) {
        recommendations.push('‚úÖ –í—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ –Ω–æ—Ä–º–µ - –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Ä–µ–∂–∏–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    }
    
    return recommendations.map(rec => `<div class="recommendation-item">${rec}</div>`).join('');
}

function resetAllSettings() {
    // –°–±—Ä–æ—Å —Ç–µ–º—ã
    localStorage.removeItem('theme');
    UI.setTheme('light');
    
    // –°–±—Ä–æ—Å —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    localStorage.removeItem('performanceMode');
    UI.setPerformanceMode('balanced');
    
    // –í—ã–∫–ª—é—á–µ–Ω–∏–µ FPS –º–æ–Ω–∏—Ç–æ—Ä–∞
    PerformanceMonitor.stop();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    initializeSettings();
    
    showFeedback('–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const benchmarkStyles = document.createElement('style');
benchmarkStyles.textContent = `
    .benchmark-section {
        margin-bottom: 2rem;
    }
    
    .benchmark-section h4 {
        margin-bottom: 1rem;
        color: var(--text-primary);
        font-size: 1.1rem;
    }
    
    .benchmark-grid {
        display: grid;
        gap: 0.75rem;
    }
    
    .benchmark-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 1rem;
        background: rgba(255, 255, 255, 0.05);
        border-radius: var(--radius-md);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .benchmark-item strong {
        color: var(--text-primary);
    }
    
    .benchmark-item span {
        color: var(--text-secondary);
        font-family: monospace;
    }
    
    .benchmark-recommendations {
        background: rgba(102, 126, 234, 0.05);
        border: 1px solid rgba(102, 126, 234, 0.2);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .recommendation-item {
        padding: 0.5rem 0;
        color: var(--text-secondary);
        line-height: 1.5;
    }
    
    .benchmark-close {
        width: 100%;
        margin-top: 1rem;
    }
`;
document.head.appendChild(benchmarkStyles);
